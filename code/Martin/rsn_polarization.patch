From 8a89e14cdd8903ab388992435d7ef1beee312091 Mon Sep 17 00:00:00 2001
From: mvala <Martin.Vala@cern.ch>
Date: Fri, 4 Mar 2016 13:58:16 +0100
Subject: [PATCH 1/2] Added cos(theta) for Jackson and Transversity frame

---
 PWGLF/RESONANCES/AliRsnMiniPair.cxx                | 42 ++++++++++++++++++++++
 PWGLF/RESONANCES/AliRsnMiniPair.h                  |  2 ++
 PWGLF/RESONANCES/AliRsnMiniValue.cxx               |  6 ++++
 PWGLF/RESONANCES/AliRsnMiniValue.h                 |  2 ++
 .../RESONANCES/macros/mini/AddTaskPhiPP13TeV_PID.C | 13 +++----
 .../RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C  | 17 +++++++--
 6 files changed, 74 insertions(+), 8 deletions(-)

diff --git a/PWGLF/RESONANCES/AliRsnMiniPair.cxx b/PWGLF/RESONANCES/AliRsnMiniPair.cxx
index cbfd0cf..5ba31ca 100644
--- a/PWGLF/RESONANCES/AliRsnMiniPair.cxx
+++ b/PWGLF/RESONANCES/AliRsnMiniPair.cxx
@@ -84,6 +84,48 @@ Double_t AliRsnMiniPair::CosThetaStar(Bool_t useMC)
 }
 
 //__________________________________________________________________________________________________
+Double_t AliRsnMiniPair::CosThetaJackson(Bool_t useMC)
+{
+//
+// Return cosine of angle of one daughter in the resonance rest frame to beam z-axis (Jackson frame)
+//
+
+   TLorentzVector &mother    = fSum[ID(useMC)];
+   TLorentzVector daughter = fP1[ID(useMC)];
+//    TLorentzVector daughter = fP2[ID(useMC)];
+   daughter.Boost(-mother.BoostVector());
+
+//   TVector3 beamAxis(0,0,1);
+//   TVector3 momentumD = daughter.Vect();
+     // cos(theta) via dot product
+//   Double_t cosTheta = momentumD.Dot(beamAxis)/TMath::Sqrt(momentumD.Mag2()*beamAxis.Mag2());
+     // Faster way (less computing)
+//   Double_t cosTheta = daughter.CosTheta();
+
+   return daughter.CosTheta();
+}
+
+//__________________________________________________________________________________________________
+Double_t AliRsnMiniPair::CosThetaTransversity(Bool_t useMC)
+{
+//
+// Return cosine of angle of one daughter in the resonance rest frame to normal of
+// beam z-axis and resonance production plane (Transversity frame)
+//
+
+	TLorentzVector &mother = fSum[ID(useMC)];
+	TLorentzVector daughter = fP1[ID(useMC)];
+	//    TLorentzVector daughter = fP2[ID(useMC)];
+	daughter.Boost(-mother.BoostVector());
+
+	TVector3 beamAxis(0, 0, 1);
+	TVector3 transFrame = beamAxis.Cross(mother.Vect());
+	TVector3 momentumD = daughter.Vect();
+
+	return momentumD.Dot(transFrame) / TMath::Sqrt((momentumD.Mag2() * transFrame.Mag2()));
+}
+
+//__________________________________________________________________________________________________
 void AliRsnMiniPair::InvertP(Bool_t first)
 {
 //
diff --git a/PWGLF/RESONANCES/AliRsnMiniPair.h b/PWGLF/RESONANCES/AliRsnMiniPair.h
index ee9cf4c..d827f54 100644
--- a/PWGLF/RESONANCES/AliRsnMiniPair.h
+++ b/PWGLF/RESONANCES/AliRsnMiniPair.h
@@ -49,6 +49,8 @@ public:
    Double_t        PtRatio(Bool_t mc)        const;
    Double_t        DipAngle(Bool_t mc)       const;
    Double_t        CosThetaStar(Bool_t mc);
+   Double_t        CosThetaJackson(Bool_t mc);
+   Double_t        CosThetaTransversity(Bool_t mc);
    Double_t        DaughterPt(Int_t daughterId, Bool_t mc);
    Double_t        DaughterDCA(Int_t daughterId); 
    Double_t        DCAProduct();                                                   
diff --git a/PWGLF/RESONANCES/AliRsnMiniValue.cxx b/PWGLF/RESONANCES/AliRsnMiniValue.cxx
index 70f7606..de8e041 100644
--- a/PWGLF/RESONANCES/AliRsnMiniValue.cxx
+++ b/PWGLF/RESONANCES/AliRsnMiniValue.cxx
@@ -114,6 +114,8 @@ const char *AliRsnMiniValue::TypeName(EType type)
       case kPtRatio:      return "PtRatio";
       case kDipAngle:     return "DipAngle";
       case kCosThetaStar: return "CosThetaStar";
+      case kCosThetaJackson:    return "CosThetaJackson";
+      case kCosThetaTransversity:    return "CosThetaTransversity";
       case kAngleLeading: return "AngleToLeading";
       case kFirstDaughterPt: return "FirstDaughterPt";
       case kSecondDaughterPt: return "SecondDaughterPt";
@@ -190,6 +192,10 @@ Float_t AliRsnMiniValue::Eval(AliRsnMiniPair *pair, AliRsnMiniEvent *event)
          return pair->DipAngle(fUseMCInfo);
       case kCosThetaStar:
          return pair->CosThetaStar(fUseMCInfo);
+      case kCosThetaJackson:
+         return pair->CosThetaJackson(fUseMCInfo);
+      case kCosThetaTransversity:
+         return pair->CosThetaTransversity(fUseMCInfo);
       case kAngleLeading:
          l = event->LeadingParticle();
          if (l) {
diff --git a/PWGLF/RESONANCES/AliRsnMiniValue.h b/PWGLF/RESONANCES/AliRsnMiniValue.h
index b86a7af..398b4fa 100644
--- a/PWGLF/RESONANCES/AliRsnMiniValue.h
+++ b/PWGLF/RESONANCES/AliRsnMiniValue.h
@@ -35,6 +35,8 @@ public:
       kPtRatio,       // ratio |pt1 - pt2|/(pt1 + pt2) of daughter transverse momenta
       kDipAngle,      // inverse cosine of the angle between daughter vector momenta
       kCosThetaStar,  // polarization angle
+      kCosThetaJackson,  // polarization angle in Jackson frame
+      kCosThetaTransversity, // polarization angle in transversity frame
       kAngleLeading,  // angle to leading particle
       kFirstDaughterPt,  //pt of the first daughter of the pair
       kSecondDaughterPt, //pt of the second daughter of the pair
diff --git a/PWGLF/RESONANCES/macros/mini/AddTaskPhiPP13TeV_PID.C b/PWGLF/RESONANCES/macros/mini/AddTaskPhiPP13TeV_PID.C
index 97e3047..19b6326 100644
--- a/PWGLF/RESONANCES/macros/mini/AddTaskPhiPP13TeV_PID.C
+++ b/PWGLF/RESONANCES/macros/mini/AddTaskPhiPP13TeV_PID.C
@@ -41,7 +41,8 @@ AliRsnMiniAnalysisTask * AddTaskPhiPP13TeV_PID
  TString     monitorOpt="NoSIGN",
  Bool_t      useMixLS=0,
  Bool_t      checkReflex=0,
- AliRsnMiniValue::EType yaxisvar=AliRsnMiniValue::kPt
+ AliRsnMiniValue::EType yaxisvar=AliRsnMiniValue::kPt,
+ TString     polarizationOpt="" /* J - Jackson,T - Transversity */
 )
 {  
   //-------------------------------------------
@@ -85,12 +86,12 @@ AliRsnMiniAnalysisTask * AddTaskPhiPP13TeV_PID
 
   AliAnalysisManager* mgr=AliAnalysisManager::GetAnalysisManager();
   if(!mgr){
-    ::Error("AddAnalysisTaskTOFKStar", "No analysis manager to connect to.");
+    ::Error("AddTaskPhiPP13TeV_PID", "No analysis manager to connect to.");
     return NULL;
   }
 
   // create the task and configure 
-  TString taskName=Form("TOFphi%s%s_%i%i",(isPP? "pp" : "PbPb"),(isMC ? "MC" : "Data"),(Int_t)cutKaCandidate);
+  TString taskName=Form("phi%s%s_%i%i",(isPP? "pp" : "PbPb"),(isMC ? "MC" : "Data"),(Int_t)cutKaCandidate);
   AliRsnMiniAnalysisTask* task=new AliRsnMiniAnalysisTask(taskName.Data(),isMC);
   //task->UseESDTriggerMask(triggerMask); //ESD ****** check this *****
   task->SelectCollisionCandidates(triggerMask); //AOD
@@ -104,7 +105,7 @@ AliRsnMiniAnalysisTask * AddTaskPhiPP13TeV_PID
   task->SetNMix(nmix);
   task->SetMaxDiffVz(maxDiffVzMix);
   task->SetMaxDiffMult(maxDiffMultMix);
-  ::Info("AddAnalysisTaskTOFKStar", Form("Event mixing configuration: \n events to mix = %i \n max diff. vtxZ = cm %5.3f \n max diff multi = %5.3f", nmix, maxDiffVzMix, maxDiffMultMix));
+  ::Info("AddTaskPhiPP13TeV_PID", Form("Event mixing configuration: \n events to mix = %i \n max diff. vtxZ = cm %5.3f \n max diff multi = %5.3f", nmix, maxDiffVzMix, maxDiffMultMix));
 
   mgr->AddTask(task);
 
@@ -123,7 +124,7 @@ AliRsnMiniAnalysisTask * AddTaskPhiPP13TeV_PID
 
   if(isPP && (!isMC)){ 
     cutVertex->SetCheckPileUp(rejectPileUp);// set the check for pileup  
-    ::Info("AddAnalysisTaskTOFKStar", Form(":::::::::::::::::: Pile-up rejection mode: %s", (rejectPileUp)?"ON":"OFF"));   
+    ::Info("AddTaskPhiPP13TeV_PID", Form(":::::::::::::::::: Pile-up rejection mode: %s", (rejectPileUp)?"ON":"OFF"));
   }
 
   // define and fill cut set for event cut
@@ -165,7 +166,7 @@ AliRsnMiniAnalysisTask * AddTaskPhiPP13TeV_PID
   // -- CONFIG ANALYSIS --------------------------------------------------------------------------
 
   gROOT->LoadMacro("$ALICE_PHYSICS/PWGLF/RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C");
-  if(!ConfigPhiPP13TeV_PID(task,isMC,isPP,"",cutsPair,aodFilterBit,customQualityCutsID,cutKaCandidate,nsigmaKa,enableMonitor,isMC&IsMcTrueOnly,monitorOpt.Data(),useMixLS,isMC&checkReflex,yaxisvar)) return 0x0;
+  if(!ConfigPhiPP13TeV_PID(task,isMC,isPP,"",cutsPair,aodFilterBit,customQualityCutsID,cutKaCandidate,nsigmaKa,enableMonitor,isMC&IsMcTrueOnly,monitorOpt.Data(),useMixLS,isMC&checkReflex,yaxisvar,polarizationOpt)) return 0x0;
 
   // -- CONTAINERS --------------------------------------------------------------------------------
 
diff --git a/PWGLF/RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C b/PWGLF/RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C
index 39856cb..a6a7566 100644
--- a/PWGLF/RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C
+++ b/PWGLF/RESONANCES/macros/mini/ConfigPhiPP13TeV_PID.C
@@ -20,7 +20,8 @@ Bool_t ConfigPhiPP13TeV_PID
  TString                monitorOpt="",
  Bool_t                 useMixLS=0,
  Bool_t                 checkReflex=0,
- AliRsnMiniValue::EType yaxisVar=AliRsnMiniValue::kPt
+ AliRsnMiniValue::EType yaxisVar=AliRsnMiniValue::kPt,
+ TString                polarizationOpt="" /* J - Jackson,T - Transversity */
 )
 {
   // manage suffix
@@ -67,6 +68,11 @@ Bool_t ConfigPhiPP13TeV_PID
   /* 2nd daughter pt  */ Int_t sdpt   = task->CreateValue(AliRsnMiniValue::kSecondDaughterPt,kFALSE);
   /* 1st daughter p   */ Int_t fdp    = task->CreateValue(AliRsnMiniValue::kFirstDaughterP,kFALSE);
   /* 2nd daughter p   */ Int_t sdp    = task->CreateValue(AliRsnMiniValue::kSecondDaughterP,kFALSE);
+  /* cos(theta) J     */ Int_t ctjID  = task->CreateValue(AliRsnMiniValue::kCosThetaJackson,kFALSE);
+  /* cos(theta) J (MC)*/ Int_t ctjmID  = task->CreateValue(AliRsnMiniValue::kCosThetaJackson,kTRUE);
+  /* cos(theta) T     */ Int_t cttID  = task->CreateValue(AliRsnMiniValue::kCosThetaTransversity,kFALSE);
+  /* cos(theta) T (MC)*/ Int_t cttmID  = task->CreateValue(AliRsnMiniValue::kCosThetaTransversity,kTRUE);
+
   
   // -- Create all needed outputs -----------------------------------------------------------------
   // use an array for more compact writing, which are different on mixing and charges
@@ -116,7 +122,10 @@ Bool_t ConfigPhiPP13TeV_PID
     // out->AddAxis(etaID, 20, -1.0, 1.0);
     // axis J: rapidity
     // out->AddAxis(yID, 10, -0.5, 0.5);
-  }   
+
+    if (polarizationOpt.Contains("J")) out->AddAxis(ctjID,21,-1.,1);
+    if (polarizationOpt.Contains("T")) out->AddAxis(cttID,21,-1.,1);
+  }
 
   if(isMC){   
     //get mothers for phi PDG = 333
@@ -131,6 +140,8 @@ Bool_t ConfigPhiPP13TeV_PID
     else outm->AddAxis(ptID,200,0.,20.);
     if(!isPP) outm->AddAxis(centID,100,0.,100.);
     else outm->AddAxis(centID,161,-0.5,160.5);
+    if (polarizationOpt.Contains("J")) outm->AddAxis(ctjmID,21,-1.,1.);
+    if (polarizationOpt.Contains("T")) outm->AddAxis(cttmID,21,-1.,1.);
 
     //get phase space of the decay from mothers
     AliRsnMiniOutput* outps=task->CreateOutput(Form("phi_phaseSpace%s", suffix),"HIST","TRUE");
@@ -159,6 +170,8 @@ Bool_t ConfigPhiPP13TeV_PID
       outreflex->AddAxis(ptID,200,0.,20.);
       if(!isPP) outreflex->AddAxis(centID,100,0.,100.);
       else outreflex->AddAxis(centID,400,0.5,400.5);
+      if (polarizationOpt.Contains("J")) outreflex->AddAxis(ctjID,21,-1.,1.);
+      if (polarizationOpt.Contains("T")) outreflex->AddAxis(cttID,21,-1.,1.);
     }//end reflections
   }//end MC
 
-- 
2.5.0


From e9e0311172e2978eff50f017b61111b6a3a0c640 Mon Sep 17 00:00:00 2001
From: mvala <Martin.Vala@cern.ch>
Date: Fri, 4 Mar 2016 14:09:56 +0100
Subject: [PATCH 2/2] Fixed warning in AliRsnMiniEvent

---
 PWGLF/RESONANCES/AliRsnMiniEvent.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/PWGLF/RESONANCES/AliRsnMiniEvent.h b/PWGLF/RESONANCES/AliRsnMiniEvent.h
index f4b4dbc..a3cac74 100644
--- a/PWGLF/RESONANCES/AliRsnMiniEvent.h
+++ b/PWGLF/RESONANCES/AliRsnMiniEvent.h
@@ -16,7 +16,7 @@ class AliRsnMiniParticle;
 class AliRsnMiniEvent : public TObject {
 public:
 
-   AliRsnMiniEvent() : fID(-1), fVz(0.0), fMult(0.0),  fTracklets(0.0), fAngle(0.0), fLeading(-1), fParticles("AliRsnMiniParticle", 0) {}
+   AliRsnMiniEvent() : fID(-1), fVz(0.0), fMult(0.0), fRefMult(0.0),  fTracklets(0.0), fAngle(0.0), fLeading(-1), fParticles("AliRsnMiniParticle", 0) {}
    ~AliRsnMiniEvent() {fParticles.Delete();}
 
    Int_t              &ID()        {return fID;}
-- 
2.5.0

